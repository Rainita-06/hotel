version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: hotel_db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME:-temp}
      MYSQL_USER: ${DB_USER:-hotel_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-hotel_password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  web:
    build: .
    container_name: hotel_web
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-hx$$rau=sf86q@*-bu01+yzla%!b_*8g*pfddb3_mezm_h5ff(u}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - DB_NAME=${DB_NAME:-temp}
      - DB_USER=${DB_USER:-hotel_user}
      - DB_PASSWORD=${DB_PASSWORD:-hotel_password}
      - DB_HOST=db
      - DB_PORT=3306
      - TIME_ZONE=${TIME_ZONE:-Asia/Kolkata}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - hotel_network
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput --verbosity=0 &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 config.wsgi:application"

  nginx:
    image: nginx:alpine
    container_name: hotel_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - hotel_network

volumes:
  db_data:
  static_volume:
  media_volume:

networks:
  hotel_network:
    driver: bridge